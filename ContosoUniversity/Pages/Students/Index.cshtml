@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
	ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
	<a asp-page="Create">Create New</a>
</p>

@*make this bit a form so it can be submitted. asp-page tells it which code to call*@
<form asp-page="./Index" method="get">
	@*get so parameters passed as query string*@
	<div class="form-actions no-color">
		<p>
			Find by name:
			<input type="text" name="searchString" value="@Model.CurrentFilter" />
			<input type="submit" value="Search" class="btn btn-default" />
			<a asp-page="./Index">Back to full list</a>
		</p>
	</div>
</form>


<table class="table">
	<thead>
		<tr>
			<th>
				@*sortOrderx is the parameter passed to the get method*@
				<a asp-page="./Index" asp-route-sortOrderx="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">
					@Html.DisplayNameFor(model => model.Student[0].LastName)
				</a>
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Student[0].FirstMidName)
			</th>
			<th>
				<a asp-page="./Index" asp-route-sortOrderx="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
					@Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
				</a>
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.Student)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FirstMidName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.EnrollmentDate)
				</td>
				<td>
					<a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
					<a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
					<a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@{
	var prevDisabled = !Model.Student.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.Student.HasNextPage ? "disabled" : "";

	<a asp-page="./Index" asp-route-sortOrderx="@Model.CurrentSort" asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
	   asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-default @prevDisabled">
		Previous
	</a>
	<a asp-page="./Index" asp-route-sortOrderx="@Model.CurrentSort" asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
	   asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-default @nextDisabled">
		Next
	</a>
}
